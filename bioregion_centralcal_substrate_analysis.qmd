---
title: "bioregion_centralcal_substrate_analysis"
format: html
editor: visual
---

```{r, message=FALSE, warnings=FALSE}
# Load libraries

# Data wrangling
library(tidyverse)
library(janitor)
library(dplyr)
library(here)

# Mapping
library(stars)
library(terra)
library(tmap)
library(stars)
library(sf)
library(units)
library(forcats)
library(paletteer)
```

```{r, message=FALSE, warnings=FALSE}
# Read in substrate data
substrate <- readRDS("substrate.rds")

# Read in MPA boundaries
mpa <- st_read('data/MPA_boundaries') %>%
  clean_names() %>%
  
  # Convert area to m2
  mutate(area_m2_mpa = hectares * 10000) %>%
  
  # Transform and make valid geometries
  
  st_transform(mpa, crs = st_crs(substrate)) %>% 
  st_make_valid()
```

```{r}
# Filter to Central CA
central_sub <- substrate |>
  filter(pmep_region == "Central California")
```

```{r, warnings=FALSE}
# Join Central CA to substrate
central_sub_mpa <- st_intersection(mpa, central_sub)
```

```{r}
# Calculate true area of substrate in the MPA 
central_sub_mpa$area_m2_sub <- st_area(central_sub_mpa)
```

```{r}
# Drop geometry
central_sub_mpa <- central_sub_mpa %>%
  st_drop_geometry() %>%
  drop_units()
```

```{r}
# Make a new df containing percentage information
# mpa_area <- central_sub_mpa %>%
#   
#   group_by(type, cmecs_sc_name) %>%
#   
#   mutate(substrate_area_m2 = sum(area_m2_sub, na.rm = TRUE),
#          percent_substrate = (area_m2_sub / area_m2_mpa) * 100) %>%
#   ungroup() %>%
#   select(name, area_m2_mpa, pmep_zone_detail, type, cmecs_sc_name, area_m2_sub, substrate_area_m2, percent_substrate)
```

```{r}
# Make a summary table
mpa_area_summary <- central_sub_mpa %>%
  
  group_by(name, area_m2_mpa, pmep_zone_detail, type, cmecs_sc_name) %>%
  
  summarise(
    area_m2_sub = sum(area_m2_sub, na.rm = TRUE)) %>%
  
  ungroup() %>%
  
  mutate(percent_substrate = (area_m2_sub / area_m2_mpa) * 100)
```
```{r}
# Check if any percent_substrate values are below 0 or above 100

invalid_percent <- mpa_area_summary %>%
  filter(percent_substrate < 0 | percent_substrate > 100)

if (nrow(invalid_percent) > 0) {
  warning("Some percent_substrate values are outside the valid range (0-100). Please check the following rows:")
  print(invalid_percent)
} else {
  message("All percent_substrate values are within the valid range (0-100).")
}

```


```{r}
ggplot(mpa_area_summary, aes(x = pmep_zone_detail, y = percent_substrate, fill = cmecs_sc_name)) +
  geom_bar(stat = "identity") +
  labs(title = "Substrate Composition by Zone",
       x = "PMEP Zone", y = "Percent of substrate MPA Area",
       fill = "Substrate Type") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
  #scale_fill_manual(values = paletteer::paletteer_dynamic("cartography::brown.pal", n = 20))

```
```{r}
ggplot(mpa_area_summary, aes(x = pmep_zone_detail, y = cmecs_sc_name, fill = percent_substrate)) +
  geom_tile() +
  scale_fill_viridis_c() +
  labs(title = "Substrate Coverage Heatmap",
       x = "Zone", y = "Substrate Type", fill = "% of MPA") +
  theme_minimal() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r, warning=FALSE, message=FALSE}
top_subs <- mpa_area_summary %>%
  count(cmecs_sc_name, wt = area_m2_sub, sort = TRUE) %>%
  top_n(10) %>%
  pull(cmecs_sc_name)

mpa_area_filtered <- mpa_area_summary %>%
  mutate(cmecs_grouped = fct_other(cmecs_sc_name, keep = top_subs))

ggplot(mpa_area_filtered, aes(x = pmep_zone_detail, y = percent_substrate, fill = cmecs_grouped)) +
  geom_col() +
  labs(title = "Substrate Composition (Top 10 Types)",
       x = "Zone", y = "Percent of MPA Area",
       fill = "Substrate Type") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_fill_paletteer_d("ggthemes::Classic_Purple_Gray_12")

```
```{r}
# Calculate total substrate area
total_substrate_area <- sum(mpa_area_summary$area_m2_sub, na.rm = TRUE)

# Calculate the sum of each substrate type's area and compute percentage
substrate_percentages <- mpa_area_summary %>%
  
  group_by(cmecs_sc_name) %>%
  
  summarise(total_area_substrate = sum(area_m2_sub, na.rm = TRUE)) %>%
  
  mutate(percent_substrate = (total_area_substrate / total_substrate_area) * 100) %>%
  
  arrange(desc(percent_substrate)) 

# View results
substrate_percentages

# Plot
ggplot(substrate_percentages, aes(x = reorder(cmecs_sc_name, percent_substrate), y = percent_substrate, fill = cmecs_sc_name)) +
  geom_bar(stat = "identity") +
  
  scale_y_continuous(expand = c(0, 0)) +

  
  geom_text(aes(label = paste0(round(percent_substrate, 1), "%")), 
            position = position_stack(vjust = 0.5), 
            size = 8,
            y = 5) + 
  
  labs(title = "Percentage of Each Substrate Type Across All MPAs",
       x = "Substrate Type", y = "Percent of Total Substrate Area",
       fill = "Substrate Type") +
  theme_minimal() +
  coord_flip() + 
  theme(
    legend.key.size = unit(0.5, "cm"),
    legend.text = element_text(size = 8),
    legend.title = element_text(size = 10),
    legend.position = "bottom"
  )


```

